d <- bquote(.(signif(stoch[3,2]),3))
e <- bquote(.(signif(stoch[3,3]),3))
f <- bquote(.(signif(stoch[3,4]),3))
g <- bquote(.(signif(stoch[2,2]),3))
h <- bquote(.(signif(stoch[2,3]),3))
i <- bquote(.(signif(stoch[2,4]),3))
j <- bquote(.(signif(stoch[1,2]),3))
k <- bquote(.(signif(stoch[1,3]),3))
l <- bquote(.(signif(stoch[1,4]),3))
du2 <- bquote(.(signif(du * C2, 3)))
dm2 <- bquote(.(signif(dm * C2, 3)))
dl2 <- bquote(.(signif(dl * C2, 3)))
d2 <- bquote(.(signif(d * C2, 3)))
e2 <- bquote(.(signif(e * C2, 3)))
f2 <- bquote(.(signif(f * C2, 3)))
g2 <- bquote(.(signif(g * C2, 3)))
h2 <- bquote(.(signif(h * C2, 3)))
i2 <- bquote(.(signif(i * C2, 3)))
j2 <- bquote(.(signif(j * C2, 3)))
k2 <- bquote(.(signif(k * C2, 3)))
l2 <- bquote(.(signif(l * C2, 3)))
setwd(textTablesFolder)
zz <- textConnection("foo", open="w")
sink(zz)
cat("\\begin{tabular}{C{1.25in} C{1.4in} C{1.4in} C{1.4in}} \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Deterministic Model Time Series}} \\\\ \n",
"& 2.5th & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"& ", du," (",du2, ") & ", dm," (", dm2, ") &", dl, " (", dl2, ") \\\\ \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Stochastic Model Summary Statistics Time Series}} \\\\ \n",
"& 2.5th      & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"97.5th Percentile & ", d," (", d2,") & " , e," (", e2,") & " ,f," (", f2,") \\\\", "\n",
"Mean & ", g," (", g2,") & " , h," (", h2,") & " ,i," (", i2,") \\\\", "\n",
"2.5th Percentile & ", j," (", j2,") & " , k," (", k2,") & " ,l," (", l2,") \\\\ \n",
"\\bottomrule \n",
"\\multicolumn{4}{l}{Pearson Correlation = ", ds.cor ," } \n",
"\\end{tabular} \\\\", sep="")
sink()
close(zz)
write(foo, fname, append=FALSE)
}
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
setwd(models.D)
load("m storageChange.Rdata")
determ <- storageChange; rm(storageChange)
setwd(modelsFile)
load("m storageChangeStats.Rdata")
stoch <- storageChangeStats$Mean ; rm(storageChangeStats)
ds.cor <- bquote(.(signif(cor(determ, stoch, use="complete.obs", method="pearson"), 4)))
setwd(results.D)
determ <- read.csv("m storageChangeStatsStats.csv")
setwd(resultsFile)  # Set working directory
stoch <- read.csv("m storageChangeStatsStats.csv")
run1("USRVolume.txt", ds.cor)
determ
determ[1,-1]
determ[1,-1] <- signif(determ[1,-1],3)
determ
stoch[,-1] <- signif(stoch[,-1],3)
stoch
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
setwd(models.D)
load("m storageChange.Rdata")
determ <- storageChange; rm(storageChange)
setwd(modelsFile)
load("m storageChangeStats.Rdata")
stoch <- storageChangeStats$Mean ; rm(storageChangeStats)
ds.cor <- bquote(.(signif(cor(determ, stoch, use="complete.obs", method="pearson"), 4)))
setwd(results.D)
determ <- read.csv("m storageChangeStatsStats.csv")
determ[1,-1] <- signif(determ[1,-1],3)
setwd(resultsFile)  # Set working directory
stoch <- read.csv("m storageChangeStatsStats.csv")
stoch[,-1] <- signif(stoch[,-1],3)
run1("USRVolume.txt", ds.cor)
run1("USRVolume.txt", ds.cor)
##### General Setup #####
source("~/Projects/Thesis/Thesis-Calcs/R/USR/Pre-Loader.R")
run1 <- function(fname, ds.cor) {
C2 <- 8.10713194  ## convert hectare-meters to acre-feet
du <- bquote(.(signif(determ$P0.975), 3))
dm <- bquote(.(signif(determ$Mean), 3))
dl <- bquote(.(signif(determ$P0.025), 3))
d <- bquote(.(signif(stoch[3,2]),3))
e <- bquote(.(signif(stoch[3,3]),3))
f <- bquote(.(signif(stoch[3,4]),3))
g <- bquote(.(signif(stoch[2,2]),3))
h <- bquote(.(signif(stoch[2,3]),3))
i <- bquote(.(signif(stoch[2,4]),3))
j <- bquote(.(signif(stoch[1,2]),3))
k <- bquote(.(signif(stoch[1,3]),3))
l <- bquote(.(signif(stoch[1,4]),3))
du2 <- bquote(.(signif(du * C2, 3)))
dm2 <- bquote(.(signif(dm * C2, 3)))
dl2 <- bquote(.(signif(dl * C2, 3)))
d2 <- bquote(.(signif(d * C2, 3)))
e2 <- bquote(.(signif(e * C2, 3)))
f2 <- bquote(.(signif(f * C2, 3)))
g2 <- bquote(.(signif(g * C2, 3)))
h2 <- bquote(.(signif(h * C2, 3)))
i2 <- bquote(.(signif(i * C2, 3)))
j2 <- bquote(.(signif(j * C2, 3)))
k2 <- bquote(.(signif(k * C2, 3)))
l2 <- bquote(.(signif(l * C2, 3)))
setwd(textTablesFolder)
zz <- textConnection("foo", open="w")
sink(zz)
cat("\\begin{tabular}{C{1.00in} C{1.5in} C{1.5in} C{1.5in}} \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Deterministic Model Time Series}} \\\\ \n",
"& 2.5th & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"& ", du," (",du2, ") & ", dm," (", dm2, ") &", dl, " (", dl2, ") \\\\ \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Stochastic Model Summary Statistics Time Series}} \\\\ \n",
"& 2.5th      & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"97.5th Percentile & ", d," (", d2,") & " , e," (", e2,") & " ,f," (", f2,") \\\\", "\n",
"Mean & ", g," (", g2,") & " , h," (", h2,") & " ,i," (", i2,") \\\\", "\n",
"2.5th Percentile & ", j," (", j2,") & " , k," (", k2,") & " ,l," (", l2,") \\\\ \n",
"\\bottomrule \n",
"\\multicolumn{4}{l}{Pearson Correlation = ", ds.cor ," } \n",
"\\end{tabular} \\\\", sep="")
sink()
close(zz)
write(foo, fname, append=FALSE)
}
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
setwd(models.D)
load("m storageChange.Rdata")
determ <- storageChange; rm(storageChange)
setwd(modelsFile)
load("m storageChangeStats.Rdata")
stoch <- storageChangeStats$Mean ; rm(storageChangeStats)
ds.cor <- bquote(.(signif(cor(determ, stoch, use="complete.obs", method="pearson"), 4)))
setwd(results.D)
determ <- read.csv("m storageChangeStatsStats.csv")
determ[1,-1] <- signif(determ[1,-1],3)
setwd(resultsFile)  # Set working directory
stoch <- read.csv("m storageChangeStatsStats.csv")
stoch[,-1] <- signif(stoch[,-1],3)
run1("USRVolume.txt", ds.cor)
##### General Setup #####
source("~/Projects/Thesis/Thesis-Calcs/R/USR/Pre-Loader.R")
run1 <- function(fname, ds.cor) {
C2 <- 8.10713194  ## convert hectare-meters to acre-feet
du <- bquote(.(signif(determ$P0.975), 3))
dm <- bquote(.(signif(determ$Mean), 3))
dl <- bquote(.(signif(determ$P0.025), 3))
d <- bquote(.(signif(stoch[3,2]),3))
e <- bquote(.(signif(stoch[3,3]),3))
f <- bquote(.(signif(stoch[3,4]),3))
g <- bquote(.(signif(stoch[2,2]),3))
h <- bquote(.(signif(stoch[2,3]),3))
i <- bquote(.(signif(stoch[2,4]),3))
j <- bquote(.(signif(stoch[1,2]),3))
k <- bquote(.(signif(stoch[1,3]),3))
l <- bquote(.(signif(stoch[1,4]),3))
du2 <- bquote(.(signif(du * C2, 3)))
dm2 <- bquote(.(signif(dm * C2, 3)))
dl2 <- bquote(.(signif(dl * C2, 3)))
d2 <- bquote(.(signif(d * C2, 3)))
e2 <- bquote(.(signif(e * C2, 3)))
f2 <- bquote(.(signif(f * C2, 3)))
g2 <- bquote(.(signif(g * C2, 3)))
h2 <- bquote(.(signif(h * C2, 3)))
i2 <- bquote(.(signif(i * C2, 3)))
j2 <- bquote(.(signif(j * C2, 3)))
k2 <- bquote(.(signif(k * C2, 3)))
l2 <- bquote(.(signif(l * C2, 3)))
setwd(textTablesFolder)
zz <- textConnection("foo", open="w")
sink(zz)
cat("\\begin{tabular}{C{1.1in} C{1.5in} C{1.5in} C{1.5in}} \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Deterministic Model Time Series}} \\\\ \n",
"& 2.5th & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"& ", du," (",du2, ") & ", dm," (", dm2, ") &", dl, " (", dl2, ") \\\\ \n",
"\\toprule \n",
"\\multicolumn{4}{l}{\\textbf{Stochastic Model Summary Statistics Time Series}} \\\\ \n",
"& 2.5th      & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
"& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
"97.5th Percentile & ", d," (", d2,") & " , e," (", e2,") & " ,f," (", f2,") \\\\", "\n",
"Mean & ", g," (", g2,") & " , h," (", h2,") & " ,i," (", i2,") \\\\", "\n",
"2.5th Percentile & ", j," (", j2,") & " , k," (", k2,") & " ,l," (", l2,") \\\\ \n",
"\\bottomrule \n",
"\\multicolumn{4}{l}{Pearson Correlation = ", ds.cor ," } \n",
"\\end{tabular} \\\\", sep="")
sink()
close(zz)
write(foo, fname, append=FALSE)
}
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
setwd(models.D)
load("m storageChange.Rdata")
determ <- storageChange; rm(storageChange)
setwd(modelsFile)
load("m storageChangeStats.Rdata")
stoch <- storageChangeStats$Mean ; rm(storageChangeStats)
ds.cor <- bquote(.(signif(cor(determ, stoch, use="complete.obs", method="pearson"), 4)))
setwd(results.D)
determ <- read.csv("m storageChangeStatsStats.csv")
determ[1,-1] <- signif(determ[1,-1],3)
setwd(resultsFile)  # Set working directory
stoch <- read.csv("m storageChangeStatsStats.csv")
stoch[,-1] <- signif(stoch[,-1],3)
run1("USRVolume.txt", ds.cor)
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
6.5-3(1.5)
6.5-3*1.5-1.2
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Segment Volume.R')
setwd(models.D)
source('~/.active-rstudio-document')
setwd(models.D)
setwd(models.D)
x <- load("m storageChange.Rdata")
x
rm(list=x)
x
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
findFile <- "storageChange"
setwd(models.D)
x <- load(paste("m ", findFile, ".Rdata", sep=""))
setwd(models.D)
x <- load(paste("m ", findFile, ".Rdata", sep=""))
determ <- get(x)
setwd(modelsFile)
x <- load(paste("m ", findFile, "Stats.Rdata", sep=""))
stoch <- get(x) ; rm(list=x)
ds.cor <- bquote(.(signif(cor(determ, stoch$Mean, use="complete.obs", method="pearson"), 4)))
setwd(results.D)
determ <- read.csv(paste("m ", findFile, "StatsStats.csv", sep=""))
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
run1 <- function(findFile, fname) {
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
findFile <- "flowChange"
saveFile <- "USRFlow.txt"
run1(findFile, saveFile)
findFile <- "unknownWater"
saveFile <- "USR_UNPS.txt"
run1(findFile, saveFile)
findFile <- "massFlux"
saveFile <- "USRFlux.txt"
run1(findFile, saveFile)
findFile <- "massStore"
saveFile <- "USRMassStore.txt"
run1(findFile, saveFile)
findFile <- "massStoreChange"
saveFile <- "USRMassStore.txt"
run1(findFile, saveFile)
findFile <- "unknownMass"
saveFile <- "USRMass_UNPS.txt"
run1(findFile, saveFile)
findFile <- "unknownWater"
saveFile <- "USR_UNPS.txt"
setwd(models.D)
x <- load(paste("m ", findFile, ".Rdata", sep=""))
determ <- get(x)
setwd(modelsFile)
x <- load(paste("m ", findFile, "Stats.Rdata", sep=""))
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/10 Water and Mass Models.R')
rm(list=ls())
##### General Setup #####
source("~/Projects/Thesis/Thesis-Calcs/R/USR/Pre-Loader.R")
setwd(modelsFile)
load("date.Rdata")
##############
#
# Water balance model
#
# Sum(unknown volume changes) = Sum(river storage changes) - Sum(Surface flows) - Sum(Atmospheric contributions)
#
##############
##### Sum(river storage changes) #####
load("volA.Rdata"); vola <- volumeChange
load("volB.Rdata"); volb <- volumeChange
load("volC.Rdata"); volc <- volumeChange
load("volD.Rdata"); vold <- volumeChange
load("volE.Rdata"); vole <- volumeChange
storageChange <- vola + volb + volc + vold + vole  	# in (m^3/day)
storageChange <- storageChange / 86400				# in m^3/sec
storageChange <- storageChange / (61.7 * 1.609344)				# in m^3/(sec*km)
storageChangeStats <- changeStats(dates, storageChange)
storageChangeStatsStats <- changeStatsStats(storageChangeStats[,-1])
setwd(modelsFile)
save(storageChange, file="m storageChange.Rdata")
save(storageChangeStats, file="m storageChangeStats.Rdata")
setwd(resultsFile)
write.csv(storageChangeStatsStats, file="m storageChangeStatsStats.csv")
setwd(modelsFile)
rm(vola, volb, volc, vold, vole)
##### Sum(Surface flows) #####
files <- list.files(pattern=glob2rx("q*.Rdata"))               # in(m^3/sec)
load("qCAN.Rdata")
load("qCON.Rdata")
load("qFLS.Rdata")
load("qFLY.Rdata")
load("qHOL.Rdata")
load("qHRC.Rdata")
load("qin.Rdata")
load("qout.Rdata")
load("qRFD.Rdata")
load("qRFR.Rdata")
load("qTIM.Rdata")
load("qWTP.Rdata")
flowChange <- q.in - q.HOL - q.RFD - q.FLS + q.RFR + q.TIM - q.FLY + q.CAN - q.CON + q.HRC + q.WTP - q.out
flowChange <- flowChange / (61.7 * 1.609344)				# in m^3/(sec*km)
flowChangeStats <- changeStats(dates, flowChange)
flowChangeStatsStats <- changeStatsStats(flowChangeStats[,-1])
setwd(modelsFile)
save(flowChange, file="m flowChange.Rdata")
save(flowChangeStats, file="m flowChangeStats.Rdata")
setwd(resultsFile)
write.csv(flowChangeStatsStats, file="m flowChangeStatsStats.csv")
setwd(modelsFile)
rm(q.in, q.HOL, q.RFD, q.FLS, q.RFR, q.TIM, q.FLY, q.CAN, q.CON, q.HRC, q.WTP, q.out)
##### Sum(Atmospheric contributions) #####
load("A evap.Rdata")
load("p.Rdata")
p <- p * 0.5							# m/day. Approx % storm coverage
atm <- (p - Evap)							# m/day
rm(Evap,p)
load("areaA.Rdata"); areaA <- surfaceArea
load("areaB.Rdata"); areaB <- surfaceArea
load("areaC.Rdata"); areaC <- surfaceArea
load("areaD.Rdata"); areaD <- surfaceArea
load("areaE.Rdata"); areaE <- surfaceArea
surfaceArea <- areaA + areaB + areaC + areaD + areaE			# in m^2
atmChange <- atm * surfaceArea						# in m^3/day
atmChange <- atmChange / 86400					# in m^3/sec
atmChange <- atmChange / (61.7 * 1.609344)					# in m^3/(sec*km)
atmChangeStats <- changeStats(dates, atmChange)
atmChangeStatsStats <- changeStatsStats(atmChangeStats[,-1])
setwd(modelsFile)
save(atmChange, file="m atmChange.Rdata")
save(atmChangeStats, file="m atmChangeStats.Rdata")
setwd(resultsFile)
write.csv(atmChangeStatsStats, file="m atmChangeStatsStats.csv")
setwd(modelsFile)
rm(areaA, areaB, areaC, areaD, areaE, atm)
# Sum(unknown volume changes) = Sum(river storage changes) - Sum(Surface flows) - Sum(Atmospheric contributions)
unknownWater <- storageChange - flowChange - atmChange
unknownWaterStats <- changeStats(dates, unknownWater)
unknownWaterStatsStats <- changeStatsStats(unknownWaterStats[,-1])
setwd(modelsFile)
save(unknownWater, file="m unknownWater.Rdata")
save(unknownWaterStats, file="m unknownWaterStats.Rdata")
setwd(resultsFile)
write.csv(unknownWaterStatsStats, file="m unknownWaterStatsStats.csv")
setwd(modelsFile)
rm(storageChange, flowChange, atmChange, surfaceArea, volumeChange)
##############
#
# Mass balance model
#
# Sum(unknown mass changes) = Sum(river mass changes) - Sum(Surface flux)
#
##############
##### Sum(river mass changes) #####
load("f Segment A.Rdata")
load("f Segment B.Rdata")
load("f Segment C.Rdata")
load("f Segment D.Rdata")
load("f Segment E.Rdata")
massStoreChange <- f.A + f.B + f.C + f.D + f.E
massStoreChange <- massStoreChange / (61.7 * 1.609344)    # in kg / (sec * km)
massStoreChangeStats <- changeStats(dates, massStoreChange)
massStoreChangeStatsStats <- changeStatsStats(massStoreChangeStats[,-1])
setwd(modelsFile)
save(massStoreChange, file="m massStoreChange.Rdata")
save(massStoreChangeStats, file="m massStoreChangeStats.Rdata")
setwd(resultsFile)
write.csv(massStoreChangeStatsStats, file="m massStoreChangeStatsStats.csv")
setwd(modelsFile)
rm(f.A, f.B, f.C, f.D, f.E)
# Sum(Surface flux)
load("f CAN.Rdata")
load("f CON.Rdata")
load("f FLS.Rdata")
load("f FLY.Rdata")
load("f HOL.Rdata")
load("f HRC.Rdata")
load("f RFD.Rdata")
load("f RFR.Rdata")
load("f TIM.Rdata")
load("f U163.Rdata")
load("f U201.Rdata")
load("f WTP.Rdata")
massFlux <- f.163 - f.HOL - f.RFD - f.FLS + f.RFR + f.TIM - f.FLY + f.CAN - f.CON + f.HRC + f.WTP - f.U201
massFlux <- massFlux / (61.7 * 1.609344)				# in kg/(day*km)
massFluxStats <- changeStats(dates, massFlux)
massFluxStatsStats <- changeStatsStats(massFluxStats[,-1])
setwd(modelsFile)
save(massFlux, file="m massFlux.Rdata")
save(massFluxStats, file="m massFluxStats.Rdata")
setwd(resultsFile)
write.csv(massFluxStatsStats, file="m massFluxStatsStats.csv")
setwd(modelsFile)
rm(f.163, f.CAN, f.CON, f.FLS, f.FLY, f.HOL, f.HRC, f.RFD, f.RFR, f.TIM, f.U201, f.WTP)
# Sum(unknown mass changes) = Sum(river mass changes) - Sum(Surface flux)
unknownMass <- massStoreChange - massFlux
unknownMassStats <- changeStats(dates, unknownMass)
unknownMassStatsStats <- changeStats(unknownMassStats[,-1])
unknownMassStatsStats <- changeStatsStats(unknownMassStats[,-1])
setwd(modelsFile)
save(unknownMass, file="m unknownMass.Rdata")
save(unknownMassStats, file="m unknownMassStats.Rdata")
setwd(resultsFile)
write.csv(unknownMassStatsStats, file="m unknownMassStatsStats.csv")
# Average daily concentration of unaccounted for flow
unknownC <- unknownMass / unknownWater * 11.574074
unknownCStats <- changeStats(dates, unknownC)
unknownCStatsStats <- changeStatsStats(unknownCStats[,-1])
setwd(modelsFile)
save(unknownC, file="m unknownC.Rdata")
save(unknownCStats, file="m unknownCStats.Rdata")
setwd(resultsFile)
write.csv(unknownCStatsStats, file="m unknownCStatsStats.csv")
rm(list=ls())
source('~/.active-rstudio-document')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
rm(list=ls())
source("~/Projects/Thesis/Thesis-Calcs/R/USR/Pre-Loader.R")
run1 <- function(findFile, fname) {
setwd(models.D)
x <- load(paste("m ", findFile, ".Rdata", sep=""))
determ <- get(x)
setwd(modelsFile)
x <- load(paste("m ", findFile, "Stats.Rdata", sep=""))
stoch <- get(x) ; rm(list=x)
ds.cor <- bquote(.(signif(cor(determ, stoch$Mean, use="complete.obs", method="pearson"), 3)))
setwd(results.D)
determ <- read.csv(paste("m ", findFile, "StatsStats.csv", sep=""))
determ[1,-1] <- signif(determ[1,-1],3)
setwd(resultsFile)
stoch <- read.csv(paste("m ", findFile, "StatsStats.csv", sep=""))
stoch[,-1] <- signif(stoch[,-1],3)
C2 <- 8.10713194  ## convert hectare-meters to acre-feet
du <- bquote(.(signif(determ$P0.975), 3))
dm <- bquote(.(signif(determ$Mean), 3))
dl <- bquote(.(signif(determ$P0.025), 3))
d <- bquote(.(signif(stoch[3,2]),3))
e <- bquote(.(signif(stoch[3,3]),3))
f <- bquote(.(signif(stoch[3,4]),3))
g <- bquote(.(signif(stoch[2,2]),3))
h <- bquote(.(signif(stoch[2,3]),3))
i <- bquote(.(signif(stoch[2,4]),3))
j <- bquote(.(signif(stoch[1,2]),3))
k <- bquote(.(signif(stoch[1,3]),3))
l <- bquote(.(signif(stoch[1,4]),3))
du2 <- bquote(.(signif(du * C2, 3)))
dm2 <- bquote(.(signif(dm * C2, 3)))
dl2 <- bquote(.(signif(dl * C2, 3)))
d2 <- bquote(.(signif(d * C2, 3)))
e2 <- bquote(.(signif(e * C2, 3)))
f2 <- bquote(.(signif(f * C2, 3)))
g2 <- bquote(.(signif(g * C2, 3)))
h2 <- bquote(.(signif(h * C2, 3)))
i2 <- bquote(.(signif(i * C2, 3)))
j2 <- bquote(.(signif(j * C2, 3)))
k2 <- bquote(.(signif(k * C2, 3)))
l2 <- bquote(.(signif(l * C2, 3)))
source("~/Projects/Thesis/Thesis-Calcs/R/SubScripts/ResultsTables-USRandDSR.R")
#   setwd(textTablesFolder)
#   zz <- textConnection("foo", open="w")
#   sink(zz)
#   cat("\\begin{tabular}{C{1.2in} C{1.5in} C{1.5in} C{1.5in}} \n",
#       "\\toprule \n",
#       "\\multicolumn{4}{l}{\\textbf{Deterministic Model Time Series}} \\\\ \n",
#       "& 2.5th & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
#       "& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
#       "& ", du," (",du2, ") & ", dm," (", dm2, ") &", dl, " (", dl2, ") \\\\ \n",
#       "\\toprule \n",
#       "\\multicolumn{4}{l}{\\textbf{Stochastic Model Summary Statistics Time Series}} \\\\ \n",
#       "& 2.5th      & \\multirow{2}{*}{Mean} & 97.5th \\\\ \n",
#       "& Percentile & & Percentile \\\\ \\cmidrule(r{.5em}l){2-4} \n",
#       "97.5th Percentile & ", d," (", d2,") & " , e," (", e2,") & " ,f," (", f2,") \\\\", "\n",
#       "Mean & ", g," (", g2,") & " , h," (", h2,") & " ,i," (", i2,") \\\\", "\n",
#       "2.5th Percentile & ", j," (", j2,") & " , k," (", k2,") & " ,l," (", l2,") \\\\ \n",
#       "\\bottomrule \n",
#       "\\multicolumn{4}{l}{Pearson Correlation = ", ds.cor ," } \n",
#       "\\end{tabular} \\\\", sep="")
#   sink()
#   close(zz)
#   write(foo, fname, append=FALSE)
}
textTablesFolder <- "~/Projects/Thesis/Thesis-Text/Tables/"
findFile <- "storageChange"
saveFile <- "USRVolume.txt"
run1(findFile, saveFile)
rm(list=ls())
source('~/Projects/Thesis/Thesis-Calcs/R/USR/Tables/Mass and Water Balance.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
